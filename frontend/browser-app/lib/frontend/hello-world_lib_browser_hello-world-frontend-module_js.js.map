{"version":3,"file":"hello-world_lib_browser_hello-world-frontend-module_js.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,qIAAkE;AAClE,sHAA4I;AAC5I,yHAAsD;AAEzC,yBAAiB,GAAY;IACtC,EAAE,EAAE,oBAAoB;IACxB,KAAK,EAAE,WAAW;CACrB,CAAC;AAGK,IAAM,6BAA6B,GAAnC,MAAM,6BAA6B;IAKtC,gBAAgB,CAAC,QAAyB;QACtC,QAAQ,CAAC,eAAe,CAAC,yBAAiB,EAAE;YACxC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC;SAC1D,CAAC,CAAC;IACP,CAAC;CACJ;AAVY,sEAA6B;AAGnB;IADlB,sBAAM,EAAC,uBAAc,CAAC;8BACa,uBAAc;qEAAC;wCAH1C,6BAA6B;IADzC,0BAAU,GAAE;GACA,6BAA6B,CAUzC;AAGM,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IAEnC,aAAa,CAAC,KAAwB;QAClC,KAAK,CAAC,kBAAkB,CAAC,qBAAW,CAAC,SAAS,EAAE;YAC5C,SAAS,EAAE,yBAAiB,CAAC,EAAE;YAC/B,KAAK,EAAE,yBAAiB,CAAC,KAAK;SACjC,CAAC,CAAC;IACP,CAAC;CACJ;AARY,gEAA0B;qCAA1B,0BAA0B;IADtC,0BAAU,GAAE;GACA,0BAA0B,CAQtC;;;;;;;;;;;;;AC/BD;;GAEG;AACH,mJAAuG;AACvG,sHAA+E;AAC/E,qIAA+D;AAE/D,qBAAe,IAAI,2BAAe,CAAC,IAAI,CAAC,EAAE;IACtC,sCAAsC;IACtC,IAAI,CAAC,4BAAmB,CAAC,CAAC,EAAE,CAAC,wDAA6B,CAAC,CAAC;IAC5D,IAAI,CAAC,yBAAgB,CAAC,CAAC,EAAE,CAAC,qDAA0B,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC","sources":["webpack:///../hello-world/src/browser/hello-world-contribution.ts?","webpack:///../hello-world/src/browser/hello-world-frontend-module.ts?"],"sourcesContent":["import { injectable, inject } from '@theia/core/shared/inversify';\nimport { Command, CommandContribution, CommandRegistry, MenuContribution, MenuModelRegistry, MessageService } from '@theia/core/lib/common';\nimport { CommonMenus } from '@theia/core/lib/browser';\n\nexport const HelloWorldCommand: Command = {\n    id: 'HelloWorld.command',\n    label: 'Say Hello'\n};\n\n@injectable()\nexport class HelloWorldCommandContribution implements CommandContribution {\n    \n    @inject(MessageService)\n    protected readonly messageService!: MessageService;\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(HelloWorldCommand, {\n            execute: () => this.messageService.info('Hello World!')\n        });\n    }\n}\n\n@injectable()\nexport class HelloWorldMenuContribution implements MenuContribution {\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CommonMenus.EDIT_FIND, {\n            commandId: HelloWorldCommand.id,\n            label: HelloWorldCommand.label\n        });\n    }\n}\n","/**\n * Generated using theia-extension-generator\n */\nimport { HelloWorldCommandContribution, HelloWorldMenuContribution } from './hello-world-contribution';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { ContainerModule } from '@theia/core/shared/inversify';\n\nexport default new ContainerModule(bind => {\n    // add your contribution bindings here\n    bind(CommandContribution).to(HelloWorldCommandContribution);\n    bind(MenuContribution).to(HelloWorldMenuContribution);\n});\n"],"names":[],"sourceRoot":""}